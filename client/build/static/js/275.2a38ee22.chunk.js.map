{"version":3,"file":"static/js/275.2a38ee22.chunk.js","mappings":"mLAIA,eAEI,OAAuCA,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAlD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAKC,aAAaC,QAAQ,eAC1BC,EAAYC,KAAKC,MAAML,GACvBM,EAAaF,KAAKC,MAAMF,GAgBxB,OAdJI,QAAQC,IAAIF,IAGdG,EAAAA,EAAAA,YAAW,WAAI,8CACb,yGACmBC,IAAAA,IAAU,0BAA0BJ,EAAaK,KADpE,OACMC,EADN,OAEEL,QAAQC,IAAII,EAAKC,MACH,IAAXD,EAAKC,MACNd,EAAgBa,EAAKC,MAJzB,4CADa,uBAAC,WAAD,wBAQbC,EACD,GAAC,IAEWhB,EAAa,EAtB9B,C,6ICoHA,UAlHsB,WACnB,OAAyBD,EAAAA,EAAAA,UAAS,IAAlC,eAAKkB,EAAL,KAAaC,EAAb,KACA,GAAyBnB,EAAAA,EAAAA,UAAS,IAAlC,eAAKoB,EAAL,KAAaC,EAAb,KACEC,GAAWC,EAAAA,EAAAA,MACTtB,GAAauB,EAAAA,EAAAA,KAclB,OAZEZ,EAAAA,EAAAA,YAAW,WAAI,8CACX,iGACwBa,IAAnBxB,EAAaa,IADlB,gCAEmBD,IAAAA,IAAU,6BAA6BZ,EAAaa,KAFvE,OAEMC,EAFN,OAGEL,QAAQC,IAAII,EAAKC,MACjBG,EAAWJ,EAAKC,MAJlB,4CADW,uBAAC,WAAD,wBAQXU,EAEH,GAAE,CAACN,EAAQnB,KAGZ,0BACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAW0B,IAAI,KAAf,+BACA,SAAC,KAAD,CAAcC,UAAU,kBAAkBD,IAAI,KAA9C,uCAIA,UAAC,KAAD,CAAOC,UAAU,4BAA4BC,YAAU,EAACC,YAAU,EAAlE,WACE,4BACE,2BACE,2CACA,uDACA,4CACA,mCACA,yCACA,0CAGJ,2BACGZ,EAAQa,KAAI,SAACC,EAAOC,GAAR,MAAyC,QAAvBD,EAAME,iBACnC,gBAAgBN,UAAU,aAA1B,WACE,yBACE,iBAAKA,UAAU,gCAAf,WACE,gBACEO,IAAKH,EAAMI,cACXR,UAAU,iBACVS,IAAI,SACJC,MAAM,KACNC,OAAO,QAET,gBAAKX,UAAU,OAAf,UACE,eAAIA,UAAU,OAAd,SAAsBI,EAAMQ,uBAKlC,2BACE,uCAAgBR,EAAMS,qBAAqBC,MAA3C,UACA,wCAAiBV,EAAMS,qBAAqBE,OAA5C,UACA,uCAAgBX,EAAMS,qBAAqBG,MAA3C,UACA,wCAAgBZ,EAAMS,qBAAqBI,OAA3C,aAEF,yBACA,UAAC,KAAD,CAAMjB,UAAU,4BACfkB,GAAE,wCAAmCd,EAAMlB,KAD5C,sCAIA,cAAGc,UAAU,qBAGb,wBAAKI,EAAMe,gBACX,wBAAKf,EAAMgB,qBACX,2BACA,SAAC,KAAD,CAAQpB,UAAU,UACjBqB,QAAS,WACR3B,EAAS,iCAAD,OAAkCU,EAAMlB,KAChD,EAHF,UAKC,cAAGoC,MAAM,2BAmBV,SAAC,KAAD,CAAQtB,UAAU,SAChBqB,SAAO,uBAAE,yGACQpC,IAAAA,OAAA,mBAAyBmB,EAAMlB,MADvC,OACLC,EADK,OAETM,EAAWN,EAAKC,MAFP,2CADX,UAKC,cAAGkC,MAAM,wBA9DHjB,GAiET,IAlEW,eAyE1B,C","sources":["components/Seller Dashboard/layouts/CurrentStore.js","components/Seller Dashboard/views/ui/FeaturedProductTable.js"],"sourcesContent":["import { useState,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default   () => {\r\n\r\n    let   [currentStore ,setCurrentStore] =useState([{}])\r\n    \r\n      let user=localStorage.getItem(\"currentUser\")\r\n      let currentUser=JSON.parse(user)\r\n      let currentUsers=JSON.parse(currentUser)\r\n      \r\n      console.log(currentUsers)\r\n      \r\n      \r\n    useEffect( ()=>{\r\n      async function fetchStores() { \r\n        let resp = await axios.get('/store/currentstore?id='+currentUsers._id);\r\n        console.log(resp.data);\r\n        if(resp.data!=\"\"){\r\n          setCurrentStore(resp.data);\r\n        }\r\n      }\r\n      fetchStores();  \r\n    },[]);\r\n   \r\n          return currentStore[0]\r\n}","import { useEffect ,useState} from \"react\";\r\nimport { Link , useNavigate} from \"react-router-dom\";\r\nimport { Card, CardBody, CardTitle, CardSubtitle, Table,Button } from \"reactstrap\";\r\nimport axios from 'axios'\r\nimport CurrentStore from \"../../layouts/CurrentStore\";\r\n\r\nconst ProjectTables = () => {\r\n   let [product,setProduct]=useState([]);\r\n   let [reFetch,setReFetch]=useState(\"\");\r\n let navigate = useNavigate()\r\n   let currentStore=CurrentStore()\r\n \r\n    useEffect( ()=>{\r\n        async function fetchStoreProducts() { \r\n          if(currentStore._id!==undefined){\r\n          let resp = await axios.get('/product/storeproducts?id='+currentStore._id);\r\n          console.log(resp.data);\r\n          setProduct(resp.data);\r\n          }\r\n        }\r\n        fetchStoreProducts();\r\n \r\n    }, [reFetch,currentStore]);\r\n    \r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Products Listing</CardTitle>\r\n          <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n            Overview of the Products\r\n          </CardSubtitle>\r\n\r\n          <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\r\n            <thead>\r\n              <tr>\r\n                <th>Product Title</th>\r\n                <th>Product Sizes with Stock </th>\r\n                <th>Product Detail</th>\r\n                <th>Prize</th>\r\n                <th>Total Stock</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {product.map((tdata, index) => tdata.productFeatured==\"true\"? (\r\n                <tr key={index} className=\"border-top\">\r\n                  <td>\r\n                    <div className=\"d-flex align-items-center p-2\">\r\n                      <img\r\n                        src={tdata.productImage1}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"ms-3\">\r\n                        <h6 className=\"mb-0\">{tdata.productTitle}</h6>\r\n                   \r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <span> Small: { tdata.productSizeWithStock.Small},  </span>\r\n                    <span> Medium: { tdata.productSizeWithStock.Medium} , </span>\r\n                    <span> Large: { tdata.productSizeWithStock.Large},  </span>\r\n                    <div> X-Large: {tdata.productSizeWithStock.xLarge}   </div>\r\n                   </td>\r\n                  <td>\r\n                  <Link className=\" text-secondary py-3 link\"\r\n                   to={`/SellerDashboard/ProductDetail${tdata._id}`}>\r\n                   View Product Detail\r\n                   &nbsp;\r\n                  <i className=\"bi bi-eye \"></i>\r\n                  </Link>\r\n                  </td>\r\n                  <td>{tdata.productPrice}</td>\r\n                  <td>{tdata.totalProductStock}</td>\r\n                  <td>\r\n                  <Button className=\"Approve\"\r\n                   onClick={()=>{\r\n                    navigate(`/SellerDashboard/UpdateProduct${tdata._id}`)   \r\n                   }} \r\n                  \r\n                  ><i class=\"bi bi-pencil-square\"></i></Button> \r\n\r\n                  {/* <Button className=\"Approve\"\r\n                      onClick={async()=>{\r\n                    let resp = await axios.put(\"/product/productFeaturedStatus?id=\"+tdata._id,{\r\n                       productFeatured:\"true\"  \r\n                    })\r\n                    setReFetch(resp.data) \r\n                    }}\r\n                  ><i class=\"bi bi-patch-check\"></i></Button> */}\r\n\r\n                  {/* <Button className=\"Reject\"\r\n                     onClick={async()=>{\r\n                    let resp = await axios.put(\"/product/productFeaturedStatus?id=\"+tdata._id,{\r\n                       productFeatured:\"false\"  \r\n                    })\r\n                    setReFetch(resp.data) \r\n                    }}\r\n                  > <i class=\"bi bi-x-circle\"></i></Button>  */}\r\n                  <Button className=\"Reject\"\r\n                    onClick={async()=>{\r\n                    let resp = await axios.delete(`/product/${tdata._id}`)\r\n                    setReFetch(resp.data) \r\n                    }}\r\n                  ><i class=\"bi bi-trash3\"></i></Button>\r\n                  </td>\r\n                </tr>\r\n              ):null)}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectTables;\r\n"],"names":["useState","currentStore","setCurrentStore","user","localStorage","getItem","currentUser","JSON","parse","currentUsers","console","log","useEffect","axios","_id","resp","data","fetchStores","product","setProduct","reFetch","setReFetch","navigate","useNavigate","CurrentStore","undefined","fetchStoreProducts","tag","className","responsive","borderless","map","tdata","index","productFeatured","src","productImage1","alt","width","height","productTitle","productSizeWithStock","Small","Medium","Large","xLarge","to","productPrice","totalProductStock","onClick","class"],"sourceRoot":""}