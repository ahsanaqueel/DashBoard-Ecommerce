{"version":3,"file":"static/js/982.f5ba4356.chunk.js","mappings":"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","sources":["components/Seller Dashboard/views/ui/CreateStore.js"],"sourcesContent":["import {useState ,useRef}  from \"react\";\r\nimport axios from \"axios\";\r\nimport {toast} from 'react-toastify';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  CardTitle,\r\n  CardBody,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormText,\r\n   Modal, ModalFooter,\r\n  ModalHeader, ModalBody\r\n} from \"reactstrap\";\r\n\r\nconst Forms = () => {\r\n  \r\n      let formRef = useRef()\r\n        \r\n      let   [storeName, setStoreName] =useState(\"\");\r\n      let   [storePhoneNumber, setStorePhoneNumber] =useState(\"\");\r\n      let   [storeNTN, setStoreNTN] =useState(\"\");\r\n      let   [storeEmail, setStoreEmail] =useState(\"\");\r\n      let   [ownerCNIC, setOwnerCNIC] =useState(\"\");\r\n      let   [storeAddress, setStoreAddress] =useState(\"\");\r\n      let   [storeLogo, setStoreLogo] = useState(\"\");\r\n        \r\n      let handleFileChange = (event) => {\r\n        setStoreLogo(event.target.files[0])\r\n    }   \r\n\r\n    const handleReset = () => {\r\n      formRef.current.reset();\r\n    }\r\n\r\n    let navigate=useNavigate()\r\n\r\n    // Modal open state\r\n    const [modal, setModal] = React.useState(false);\r\n    \r\n    // Toggle for Modal\r\n    const toggle = () =>{\r\n      setModal(!modal);\r\n    }  \r\n            \r\n    const toggle1 = () =>{\r\n      setModal(!modal);\r\n      navigate(\"/\")\r\n    } \r\n\r\n    async function createStore(e){\r\n      e.preventDefault(); \r\n      let form = new FormData();        \r\n      form.append(\"storeName\",storeName)\r\n      form.append(\"storePhoneNo\",storePhoneNumber)\r\n      form.append(\"storeNTN\",storeNTN)\r\n      form.append(\"storeEmail\",storeEmail)\r\n      form.append(\"storeAddress\",storeAddress)\r\n      form.append(\"storeOwnerCnic\",ownerCNIC)\r\n      form.append('storeLogo',storeLogo) \r\n    \r\n\r\n      try{\r\n        let resp = await axios.post('/store/createstore?token='+localStorage.getItem(\"someToken\"), form);\r\n          setStoreName(\"\")\r\n          setStorePhoneNumber(\"\")\r\n          setStoreNTN(\"\")\r\n          setStoreEmail(\"\")\r\n          setStoreAddress(\"\")\r\n          setOwnerCNIC(\"\")\r\n          handleReset();          \r\n          console.log(resp.data)\r\n          toast.success(\"Store Created Succesfully \")\r\n          toggle()\r\n        }\r\n      catch(e){\r\n      toast.error(\"Something Went Wrong\")\r\n      console.log(e);\r\n      }\r\n\r\n      }\r\n  return (\r\n    <>\r\n    <Row>\r\n      <Col>\r\n        {/* --------------------------------------------------------------------------------*/}\r\n        {/* Card-1*/}\r\n        {/* --------------------------------------------------------------------------------*/}\r\n        <Card>\r\n          <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n            <i className=\"bi bi-shop\"> </i>\r\n             Create Store\r\n          </CardTitle>\r\n          <CardBody>\r\n            <Form  onSubmit={e =>{createStore(e)}}  innerRef={formRef}>\r\n            <FormGroup>\r\n                <Label for=\"storeName\">Store Name</Label>\r\n                <Input\r\n                  id=\"storeName\"\r\n                  name=\"storeName\"\r\n                  placeholder=\"Enter Store Name\"\r\n                  type=\"text\"\r\n                  value={storeName}\r\n                  onChange={(evt) =>setStoreName(evt.target.value)}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"storePhoneNumber\"> Store Phone Number</Label>\r\n                <Input\r\n                  id=\"storePhoneNumber\"\r\n                  name=\"storePhoneNumber\"\r\n                  placeholder=\"Enter Store Phone Number\"\r\n                  type=\"number\"\r\n                  value={storePhoneNumber}\r\n                  onChange={(evt) =>setStorePhoneNumber(evt.target.value)}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"storeNTN\">Store NTN </Label>\r\n                <Input\r\n                  id=\"storeNTN\"\r\n                  name=\"storeNTN\"\r\n                  placeholder=\"Enter Store NTN\"\r\n                  type=\"number\"\r\n                  value={storeNTN}\r\n                  onChange={(evt) =>setStoreNTN(evt.target.value)}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"storeEmail\">Store Email</Label>\r\n                <Input\r\n                  id=\"storeEmail\"\r\n                  name=\"storeEmail\"\r\n                  placeholder=\"with a placeholder\"\r\n                  type=\"storeEmail\"\r\n                  value={storeEmail}\r\n                  onChange={(evt) =>setStoreEmail(evt.target.value)}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label for=\"ownerCNIC\">Owner CNIC</Label>\r\n                <Input\r\n                  id=\"ownerCNIC\"\r\n                  name=\"ownerCNIC\"\r\n                  placeholder=\"Enter Owner CNIC\"\r\n                  type=\"number\"\r\n                  value={ownerCNIC}\r\n                  onChange={(evt) =>setOwnerCNIC(evt.target.value)}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n             \r\n              <FormGroup>\r\n                <Label for=\"storeAddress\">Store Address</Label>\r\n                <Input \r\n                id=\"storeAddress\" \r\n                name=\"text\" \r\n                type=\"textarea\"\r\n                value={storeAddress}\r\n                onChange={(evt) =>setStoreAddress(evt.target.value)}\r\n                required\r\n                 />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label for=\"storeLogo\">Store Logo</Label>\r\n                <Input onChange={handleFileChange} required id=\"storeLogo\" name=\"file\" type=\"file\" />\r\n                <FormText>\r\n                    Attach Logo of your Store\r\n                </FormText>\r\n              </FormGroup>\r\n              <Button>Submit</Button>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n     \r\n    <div style={{\r\n            display: 'block', width: 700, padding: 30\r\n        }}>\r\n            {/* <h4>ReactJS Reactstrap Modal Component</h4>\r\n            <Button color=\"danger\"\r\n                onClick={toggle}>Click me to open Modal</Button> */}\r\n            <Modal isOpen={modal} toggle={toggle}>\r\n                <ModalHeader\r\n                    toggle={toggle1}> Request Pending </ModalHeader>\r\n                <ModalBody>\r\n                      Store Request is Sent Wait For Approval  \r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={toggle1}>Okay</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n     </div>\r\n        </>\r\n    \r\n  );\r\n};\r\n\r\nexport default Forms;\r\n"],"names":["formRef","useRef","useState","storeName","setStoreName","storePhoneNumber","setStorePhoneNumber","storeNTN","setStoreNTN","storeEmail","setStoreEmail","ownerCNIC","setOwnerCNIC","storeAddress","setStoreAddress","storeLogo","setStoreLogo","handleReset","current","reset","navigate","useNavigate","React","modal","setModal","toggle","toggle1","e","preventDefault","form","FormData","append","axios","localStorage","getItem","resp","console","log","data","toast","tag","className","onSubmit","createStore","innerRef","for","id","name","placeholder","type","value","onChange","evt","target","required","event","files","style","display","width","padding","isOpen","color","onClick"],"sourceRoot":""}