{"version":3,"file":"static/js/412.86003fb1.chunk.js","mappings":"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","sources":["components/Seller Dashboard/layouts/CurrentStore.js","components/Seller Dashboard/views/ui/UpdateProduct.js"],"sourcesContent":["import { useState,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default   () => {\r\n\r\n    let   [currentStore ,setCurrentStore] =useState([{}])\r\n    \r\n      let user=localStorage.getItem(\"currentUser\")\r\n      let currentUser=JSON.parse(user)\r\n      let currentUsers=JSON.parse(currentUser)\r\n      \r\n      console.log(currentUsers)\r\n      \r\n      \r\n    useEffect( ()=>{\r\n      async function fetchStores() { \r\n        let resp = await axios.get('/store/currentstore?id='+currentUsers._id);\r\n        console.log(resp.data);\r\n        if(resp.data!=\"\"){\r\n          setCurrentStore(resp.data);\r\n        }\r\n      }\r\n      fetchStores();  \r\n    },[]);\r\n   \r\n          return currentStore[0]\r\n}","import { useState,useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/scss/main.scss';\r\nimport CurrentStore from \"../../layouts/CurrentStore\";\r\nimport { Link ,useParams} from \"react-router-dom\";\r\nimport {\r\n    Card,\r\n    Row,\r\n    Col,\r\n    CardTitle,\r\n    CardBody,\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    FormText,\r\n  } from \"reactstrap\";\r\n\r\n\r\n  \r\n  const AddProduct = () => {\r\n\r\n       let {productID}=useParams();\r\n       let currentStore = CurrentStore()\r\n\r\n       let image1=useRef()\r\n       let image2=useRef()\r\n       let image3=useRef()\r\n       let formRef=useRef()\r\n\r\n       let   [productTitle, setProductTitle] =useState(\"\");\r\n       let   [productPrice, setProductPrice] =useState(\"\");\r\n       let   [totalProductStock, setTotalProductStock] =useState(\"0\");\r\n       let   [Small, setSmall] =useState(\"0\");\r\n       let   [Medium, setMedium] =useState(\"0\");\r\n       let   [Large, setLarge] =useState(\"0\");\r\n       let   [xLarge, setXLarge] =useState(\"0\");\r\n       let   [productSize, setProductSize] =useState(\"\");\r\n       let   [productCategory, setProductCategory] =useState([]);\r\n       let   [productType, setProductType] =useState([]);\r\n       let   [productDescription, setProductDescription] =useState(\"\");\r\n       let   [productImage1, setProductImage1] = useState([]);\r\n       let   [productImage2, setProductImage2] = useState([]);\r\n       let   [productImage3, setProductImage3] = useState([]);\r\n          \r\n\r\n       let handleFileChange1 = (event) => {\r\n          //  setProductImage1(event.target.files[0])\r\n           image1.current.files=event.target.files[0]\r\n        }   \r\n        let handleFileChange2 = (event) => {\r\n            // setProductImage2(event.target.files[0])\r\n            image2.current.files=event.target.files[0]\r\n        }  \r\n        let handleFileChange3 = (event) => {\r\n            // setProductImage3(event.target.files[0])\r\n            image3.current.files=event.target.files[0]\r\n        }\r\n\r\n \r\n        useEffect( ()=>{\r\n          async function  fetchSingleProducts() { \r\n            let resp = await axios.get('/product/singleProduct?id='+productID);\r\n            console.log(resp.data);\r\n              setProductTitle(resp.data.productTitle);\r\n              setProductType(resp.data.productType);\r\n              setProductCategory(resp.data.productCategory);\r\n              setProductDescription(resp.data.productDescription);\r\n              setTotalProductStock(resp.data.totalProductStock);\r\n              setSmall(resp.data.productSizeWithStock.Small);\r\n              setMedium(resp.data.productSizeWithStock.Medium);\r\n              setLarge(resp.data.productSizeWithStock.Large);\r\n              setXLarge(resp.data.productSizeWithStock.xLarge);\r\n              setProductPrice(resp.data.productPrice)\r\n              setProductSize({\r\n                Small,\r\n                Medium,\r\n                Large,\r\n                xLarge\r\n              })\r\n\r\n\r\n      // let  images=[resp.data.productImage1,\r\n      //   resp.data.productImage2,resp.data.productImage3  \r\n      // ]\r\n\r\n      // images.forEach((image,index)=>{\r\n\r\n      //   const image_uri = image\r\n      //   const image_name = image_uri.split('/').reverse()[0]\r\n      //   const image_name1 = image_name.split('-')[1]\r\n      //   const FinalName = image_name1.split('%').join()\r\n        \r\n      //   console.log(FinalName)\r\n    \r\n      //  let url = 'https://cdn.shopify.com/s/files/1/0234/8017/2591/products/young-man-in-bright-fashion_925x_f7029e2b-80f0-4a40-a87b-834b9a283c39.jpg'\r\n      // //  let url= \"https://deals-pk.s3.ap-south-1.amazonaws.com/Gul%20Ahmed/productImage1-bootom%20last.jpg-64e37f66-0035-4f54-a172-067defd23fa0\"\r\n      //       const toDataURL = url => fetch(url)\r\n      //       .then(response => response.blob())\r\n      //       .then(blob => new Promise((resolve, reject) => {\r\n      //       const reader = new FileReader()\r\n      //       reader.onloadend = () => resolve(reader.result)\r\n      //       reader.onerror = reject\r\n      //       reader.readAsDataURL(blob)\r\n      //     }))\r\n                \r\n      //     // ***Here is code for converting \"Base64\" to javascript \"File Object\".***\r\n          \r\n      //     function dataURLtoFile(dataurl, FinalName) {\r\n      //     var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n      //     bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n      //     while(n--){\r\n      //     u8arr[n] = bstr.charCodeAt(n);\r\n      //     }\r\n      //     return new File([u8arr], FinalName, {type:mime});\r\n      //     }\r\n          \r\n      //     // *** Calling both function ***\r\n          \r\n      //     toDataURL(url)\r\n      //     .then(dataUrl => {\r\n      //     // console.log('Here is Base64 Url', dataUrl)\r\n      //     var fileData = dataURLtoFile(dataUrl,FinalName);\r\n      //     console.log(\"Here is JavaScript File Object\",fileData)\r\n      //     // })\r\n      //     let list = new DataTransfer();\r\n      //     list.items.add(fileData);\r\n      //     let myFileList = list.files;\r\n      //         // let list = new DataTransfer();\r\n      //         // let file = new File([fileData], FinalName);\r\n      //         // list.items.add(file);\r\n      //         // let myFileList = list.files;\r\n      //         console.log(myFileList)\r\n      //         if(index==0){\r\n      //           (image1.current.files=myFileList) \r\n      //             setProductImage1(myFileList)\r\n                 \r\n      //         }else if(index==1){\r\n      //           (image2.current.files=myFileList) \r\n      //            setProductImage2(myFileList)\r\n                  \r\n      //         }else if(index==2){\r\n      //           (image3.current.files=myFileList) \r\n      //           setProductImage3(myFileList)   \r\n                  \r\n      //         }\r\n      //         // console.log({\r\n      //         //   productImage1,\r\n      //         //   productImage2,\r\n      //         //   productImage3\r\n      //         // })\r\n      //       })\r\n      //    })\r\n              \r\n            }\r\n            fetchSingleProducts();\r\n        }, []);\r\n\r\n\r\n        const handleReset = () => {\r\n          formRef.current.reset();\r\n        }\r\n\r\n        useEffect( ()=>{\r\n          setProductSize({\r\n          Small,\r\n          Medium,\r\n          Large,\r\n          xLarge\r\n        })\r\n\r\n        let Total=(+Small)+(+Medium)+(+Large)+(+xLarge)\r\n          setTotalProductStock(Total)\r\n\r\n        },[Small,Large,Medium,xLarge])\r\n   \r\n      async function UpdateProduct(e){\r\n        e.preventDefault();        \r\n        console.log(totalProductStock)\r\n        setSmall()\r\n        let form = new FormData();        \r\n        form.append(\"productTitle\",productTitle)\r\n        form.append(\"productPrice\",productPrice)\r\n        form.append(\"productCategory\",productCategory)\r\n        form.append(\"totalProductStock\",totalProductStock)\r\n        if(productSize!==\"\"){\r\n        form.append(\"productSizeWithStock\", JSON.stringify(productSize))\r\n        }\r\n        form.append('productQty',1) \r\n        form.append(\"productType\",productType)\r\n        form.append(\"productDescription\",productDescription)\r\n        form.append(\"store\",currentStore._id)\r\n        if( image1.current.files[0]!=undefined && \r\n           image2.current.files[0]!=undefined &&\r\n            image3.current.files[0]!=undefined ){\r\n        form.append('productImage1', image1.current.files[0])\r\n        form.append('productImage2',image2.current.files[0]) \r\n        form.append('productImage3',image3.current.files[0])\r\n        }\r\n\r\n        console.log(productSize)\r\n        console.log(\r\n          image1.current.files[0],\r\n          image2.current.files[0],\r\n          image3.current.files[0] \r\n      )\r\n      \r\n        try{\r\n          let resp = await axios.put(`/product/updateProduct${productID}`, form);\r\n          setProductTitle(\"\")\r\n          setProductPrice(\"\")\r\n          setProductCategory(\"\")\r\n          setTotalProductStock(\"0\")\r\n          setSmall(\"0\")\r\n          setMedium(\"0\")\r\n          setLarge(\"0\")\r\n          setXLarge(\"0\")\r\n          setProductType(\"\")\r\n          setProductDescription(\"\")\r\n          handleReset()         \r\n          toast.success(\"Product Updated Succesfully \")\r\n          }\r\n       catch(e){\r\n       toast.error(\"Something Went Wrong\")\r\n       console.log(e);\r\n        }\r\n\r\n       }\r\n       \r\n    return (\r\n      <Row>\r\n        <Col>\r\n          {/* --------------------------------------------------------------------------------*/}\r\n          {/* Card-1*/}\r\n          {/* --------------------------------------------------------------------------------*/}\r\n          <Card>\r\n            <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n            <i class=\"bi bi-bag-check\"></i>\r\n               Add Products\r\n            </CardTitle>\r\n            <CardBody>\r\n              <Form onSubmit={e =>{UpdateProduct(e)}} innerRef={formRef} >\r\n              <FormGroup>\r\n                  <Label for=\"productTitle\">Product Title</Label>\r\n                  <Input\r\n                    id=\"productTitle\"\r\n                    name=\"productTitle\"\r\n                    placeholder=\"Enter Product Title\"\r\n                    type=\"text\"\r\n                    value={productTitle}\r\n                    onChange={(evt) =>setProductTitle(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"productPrice\">Product Price</Label>\r\n                  <Input\r\n                    id=\"productPrice\"\r\n                    name=\"productPrice\"\r\n                    placeholder=\"Enter Product Price in Rupee\"\r\n                    type=\"number\"\r\n                    value={productPrice}\r\n                    onChange={(evt) =>setProductPrice(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"productStock\"> Total Product Stock</Label>\r\n                  <Input\r\n                    id=\"productStock\"\r\n                    name=\"productStock\"\r\n                    placeholder=\"Enter Total Product Stock\"\r\n                    type=\"number\"\r\n                    value={totalProductStock}\r\n                    onChange={(evt) =>setTotalProductStock(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"Small\">Small Size Stock</Label>\r\n                  <Input\r\n                    id=\"Small\"\r\n                    name=\"Small\"\r\n                    placeholder=\"Enter Small Size Stock\"\r\n                    type=\"number\"\r\n                    value={Small}\r\n                    onChange={(evt) =>setSmall(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"Small\">Medium Size Stock</Label>\r\n                  <Input\r\n                    id=\"Medium\"\r\n                    name=\"Medium\"\r\n                    placeholder=\"Enter Medium Size Stock\"\r\n                    type=\"number\"\r\n                    value={Medium}\r\n                    onChange={(evt) =>setMedium(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"Large\">Large Size Stock</Label>\r\n                  <Input\r\n                    id=\"Large\"\r\n                    name=\"Large\"\r\n                    placeholder=\"Enter Large Size Stock\"\r\n                    type=\"number\"\r\n                    value={Large}\r\n                    onChange={(evt) =>setLarge(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup> <FormGroup>\r\n                  <Label for=\"xLarge\">X-Large Size Stock</Label>\r\n                  <Input\r\n                    id=\"xLarge\"\r\n                    name=\"xLarge\"\r\n                    placeholder=\"Enter X-Large Size Stock\"\r\n                    type=\"number\"\r\n                    value={xLarge}\r\n                    onChange={(evt) =>setXLarge(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label for=\"productCategory\">Select Product Category</Label>\r\n                <Input id=\"productCategory\" name=\"productCategory\" type=\"select\"\r\n                value={productCategory}\r\n                onChange={(evt) =>setProductCategory(evt.target.value)}\r\n                 required>\r\n                <option>Select Category</option>\r\n                  <option>Men</option>\r\n                  <option>Women</option>\r\n                  <option>Kids</option> \r\n                </Input>\r\n              </FormGroup>\r\n\r\n            <FormGroup>\r\n                <Label for=\"productType\">Select Product Type</Label>\r\n                <Input id=\"productType\" name=\"productType\" type=\"select\"\r\n                 value={productType}\r\n                 onChange={(evt) =>setProductType(evt.target.value)}\r\n                  required>\r\n                <option>Select Type</option>\r\n                  <option>Cotton</option>\r\n                  <option>Fabric</option>\r\n                  <option>Lawn</option>\r\n                  <option>Washanwear</option>\r\n                  <option>Wool</option>\r\n                </Input>\r\n            </FormGroup>\r\n  \r\n             \r\n                <FormGroup>\r\n                  <Label for=\"productDescription\">Product Description</Label>\r\n                  <Input \r\n                  id=\"productDescription\" \r\n                  name=\"text\" \r\n                  type=\"textarea\"\r\n                  value={productDescription}\r\n                  onChange={(evt) =>setProductDescription(evt.target.value)}\r\n                  required\r\n                   />\r\n                </FormGroup>\r\n  \r\n                 <h5  className=\"warning\"> <strong> Note: </strong> \r\n                  If you want to change one picture then reselect others too.\r\n                 </h5>\r\n                <FormGroup>\r\n                  <Label for=\"exampleFile\">Picture 1</Label>\r\n                  <Input \r\n                  // files={productImage1} \r\n                  onChange={handleFileChange1} innerRef={image1}  id=\"exampleFile\" name=\"file\" accept=\"image/*\" type=\"file\"\r\n                   />\r\n                  <FormText>\r\n                      Choose Picture If You Want to Update\r\n                  </FormText>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleFile\">Picture 2</Label>\r\n                  <Input \r\n                  // files={productImage2} \r\n                  onChange={handleFileChange2}  innerRef={image2}  id=\"exampleFile\" name=\"file\" accept=\"image/*\" type=\"file\" />\r\n                  <FormText>\r\n                  Choose Picture If You Want to Update\r\n                  </FormText>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleFile\">Picture 3</Label>\r\n                  <Input \r\n                  // files={productImage3}\r\n                   onChange={handleFileChange3} innerRef={image3}  id=\"exampleFile\" name=\"file\" accept=\"image/*\" type=\"file\" />\r\n                  <FormText>\r\n                  Choose Picture If You Want to Update\r\n                  </FormText>\r\n                </FormGroup>\r\n                \r\n                <Button>Update</Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n  \r\n  export default AddProduct;\r\n  "],"names":["useState","currentStore","setCurrentStore","user","localStorage","getItem","currentUser","JSON","parse","currentUsers","console","log","useEffect","axios","_id","resp","data","fetchStores","productID","useParams","CurrentStore","image1","useRef","image2","image3","formRef","productTitle","setProductTitle","productPrice","setProductPrice","totalProductStock","setTotalProductStock","Small","setSmall","Medium","setMedium","Large","setLarge","xLarge","setXLarge","productSize","setProductSize","productCategory","setProductCategory","productType","setProductType","productDescription","setProductDescription","productSizeWithStock","fetchSingleProducts","handleReset","current","reset","e","preventDefault","form","FormData","append","stringify","undefined","files","toast","tag","className","class","onSubmit","UpdateProduct","innerRef","for","id","name","placeholder","type","value","onChange","evt","target","required","event","accept"],"sourceRoot":""}