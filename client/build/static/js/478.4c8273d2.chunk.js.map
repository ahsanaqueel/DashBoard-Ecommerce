{"version":3,"file":"static/js/478.4c8273d2.chunk.js","mappings":"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","sources":["components/Seller Dashboard/layouts/CurrentStore.js","components/Seller Dashboard/views/ui/AddProducts.js"],"sourcesContent":["import { useState,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default   () => {\r\n\r\n    let   [currentStore ,setCurrentStore] =useState([{}])\r\n    \r\n      let user=localStorage.getItem(\"currentUser\")\r\n      let currentUser=JSON.parse(user)\r\n      let currentUsers=JSON.parse(currentUser)\r\n      \r\n      console.log(currentUsers)\r\n      \r\n      \r\n    useEffect( ()=>{\r\n      async function fetchStores() { \r\n        let resp = await axios.get('/store/currentstore?id='+currentUsers._id);\r\n        console.log(resp.data);\r\n        if(resp.data!=\"\"){\r\n          setCurrentStore(resp.data);\r\n        }\r\n      }\r\n      fetchStores();  \r\n    },[]);\r\n   \r\n          return currentStore[0]\r\n}","import { useState,useEffect ,useRef} from \"react\";\r\nimport axios from \"axios\";\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/scss/main.scss';\r\nimport CurrentStore from \"../../layouts/CurrentStore\";\r\nimport {\r\n    Card,\r\n    Row,\r\n    Col,\r\n    CardTitle,\r\n    CardBody,\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    FormText,\r\n  } from \"reactstrap\";\r\n\r\n  \r\n  const AddProduct = () => {\r\n\r\n    let currentStore = CurrentStore()\r\n\r\n          let formRef = useRef()\r\n          \r\n\r\n       let   [productTitle, setProductTitle] =useState(\"\");\r\n       let   [productPrice, setProductPrice] =useState(\"\");\r\n       let   [totalProductStock, setTotalProductStock] =useState(\"0\");\r\n       let   [Small, setSmall] =useState(\"0\");\r\n       let   [Medium, setMedium] =useState(\"0\");\r\n       let   [Large, setLarge] =useState(\"0\");\r\n       let   [xLarge, setXLarge] =useState(\"0\");\r\n       let   [productSize, setProductSize] =useState(\"\");\r\n       let   [productCategory, setProductCategory] =useState([]);\r\n       let   [productType, setProductType] =useState([]);\r\n       let   [productDescription, setProductDescription] =useState(\"\");\r\n       let   [productImage1, setProductImage1] = useState(\"\");\r\n       let   [productImage2, setProductImage2] = useState(\"\");\r\n       let   [productImage3, setProductImage3] = useState(\"\");\r\n          \r\n       const handleReset = () => {\r\n        formRef.current.reset();\r\n      }\r\n      \r\n       let handleFileChange1 = (event) => {\r\n         \r\n         setProductImage1(event.target.files[0])\r\n        \r\n        \r\n      }   \r\n      let handleFileChange2 = (event) => {\r\n       \r\n        setProductImage2(event.target.files[0])\r\n        \r\n      }  \r\n      let handleFileChange3 = (event) => {\r\n        \r\n        setProductImage3(event.target.files[0])\r\n        \r\n      }\r\n\r\n      useEffect( ()=>{\r\n      setProductSize({\r\n      Small,\r\n      Medium,\r\n      Large,\r\n      xLarge\r\n    }\r\n    )\r\n    let Total=(+Small)+(+Medium)+(+Large)+(+xLarge)\r\n    setTotalProductStock(Total)\r\n  },[Small,Large,Medium,xLarge])\r\n   \r\n      async function SubmitProduct(e){\r\n        e.preventDefault();        \r\n        console.log(totalProductStock)\r\n        let form = new FormData();        \r\n        form.append(\"productTitle\",productTitle)\r\n        form.append(\"productPrice\",productPrice)\r\n        form.append(\"productCategory\",productCategory)\r\n        form.append(\"totalProductStock\",totalProductStock)\r\n        if(productSize!==\"\"){\r\n        form.append(\"productSizeWithStock\", JSON.stringify(productSize))\r\n        }\r\n        // Object.keys(productSize).forEach(key => formData.append(key, object[key]));\r\n        //   for ( let key in productSize ) {\r\n        //     form.append(\"productSize\", key);\r\n        // }\r\n        form.append(\"productType\",productType)\r\n        form.append(\"productDescription\",productDescription)\r\n        form.append(\"store\",currentStore._id)\r\n        form.append(\"store\",currentStore._id)\r\n        form.append('productQty',1) \r\n        form.append('productImage1',productImage1) \r\n        form.append('productImage2',productImage2) \r\n        form.append('productImage3',productImage3)\r\n        \r\n      console.log(productSize)\r\n\r\n        try{\r\n          let resp = await axios.post(`/product/addproduct?id=`+currentStore._id, form);\r\n          setProductTitle(\"\")\r\n          setProductPrice(\"\")\r\n          setProductCategory(\"\")\r\n          setTotalProductStock(\"0\")\r\n          setSmall(\"0\")\r\n          setMedium(\"0\")\r\n          setLarge(\"0\")\r\n          setXLarge(\"0\")\r\n          setProductType(\"\")\r\n          setProductDescription(\"\")\r\n          handleReset();\r\n          toast.success(\"Product Added Succesfully \")\r\n          }\r\n       catch(e){\r\n       toast.error(\"Something Went Wrong\")\r\n       console.log(e);\r\n        }\r\n\r\n       }\r\n       \r\n    return (\r\n      <Row>\r\n        <Col>\r\n          {/* --------------------------------------------------------------------------------*/}\r\n          {/* Card-1*/}\r\n          {/* --------------------------------------------------------------------------------*/}\r\n          <Card>\r\n            <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n            <i class=\"bi bi-bag-check\"></i>\r\n               Add Products\r\n            </CardTitle>\r\n            <CardBody>\r\n              <Form   onSubmit={e =>{SubmitProduct(e)}}  innerRef={formRef} >\r\n              <FormGroup>\r\n                  <Label for=\"productTitle\">Product Title</Label>\r\n                  <Input\r\n                    id=\"productTitle\"\r\n                    name=\"productTitle\"\r\n                    placeholder=\"Enter Product Title\"\r\n                    type=\"text\"\r\n                    value={productTitle}\r\n                    onChange={(evt) =>setProductTitle(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"productPrice\">Product Price</Label>\r\n                  <Input\r\n                    id=\"productPrice\"\r\n                    name=\"productPrice\"\r\n                    placeholder=\"Enter Product Price in Rupee\"\r\n                    type=\"number\"\r\n                    value={productPrice}\r\n                    onChange={(evt) =>setProductPrice(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"productStock\"> Total Product Stock</Label>\r\n                  <Input\r\n                    id=\"productStock\"\r\n                    name=\"productStock\"\r\n                    placeholder=\"Enter Total Product Stock\"\r\n                    type=\"number\"\r\n                    value={totalProductStock}\r\n                    onChange={(evt) =>setTotalProductStock(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"Small\">Small Size Stock</Label>\r\n                  <Input\r\n                    id=\"Small\"\r\n                    name=\"Small\"\r\n                    placeholder=\"Enter Small Size Stock\"\r\n                    type=\"number\"\r\n                    value={Small}\r\n                    onChange={(evt) =>setSmall(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"Small\">Medium Size Stock</Label>\r\n                  <Input\r\n                    id=\"Medium\"\r\n                    name=\"Medium\"\r\n                    placeholder=\"Enter Medium Size Stock\"\r\n                    type=\"number\"\r\n                    value={Medium}\r\n                    onChange={(evt) =>setMedium(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"Large\">Large Size Stock</Label>\r\n                  <Input\r\n                    id=\"Large\"\r\n                    name=\"Large\"\r\n                    placeholder=\"Enter Large Size Stock\"\r\n                    type=\"number\"\r\n                    value={Large}\r\n                    onChange={(evt) =>setLarge(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup> <FormGroup>\r\n                  <Label for=\"xLarge\">X-Large Size Stock</Label>\r\n                  <Input\r\n                    id=\"xLarge\"\r\n                    name=\"xLarge\"\r\n                    placeholder=\"Enter X-Large Size Stock\"\r\n                    type=\"number\"\r\n                    value={xLarge}\r\n                    onChange={(evt) =>setXLarge(evt.target.value)}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label for=\"productCategory\">Select Product Category</Label>\r\n                <Input id=\"productCategory\" name=\"productCategory\" type=\"select\"\r\n                value={productCategory}\r\n                onChange={(evt) =>setProductCategory(evt.target.value)}\r\n                 required>\r\n                <option>Select Category</option>\r\n                  <option>Men</option>\r\n                  <option>Women</option>\r\n                  <option>Kids</option> \r\n                </Input>\r\n              </FormGroup>\r\n\r\n            <FormGroup>\r\n                <Label for=\"productType\">Select Product Type</Label>\r\n                <Input id=\"productType\" name=\"productType\" type=\"select\"\r\n                 value={productType}\r\n                 onChange={(evt) =>setProductType(evt.target.value)}\r\n                  required>\r\n                <option>Select Type</option>\r\n                  <option>Cotton</option>\r\n                  <option>Fabric</option>\r\n                  <option>Lawn</option>\r\n                  <option>Washanwear</option>\r\n                  <option>Wool</option>\r\n                </Input>\r\n            </FormGroup>\r\n  \r\n             \r\n                <FormGroup>\r\n                  <Label for=\"productDescription\">Product Description</Label>\r\n                  <Input \r\n                  id=\"productDescription\" \r\n                  name=\"text\" \r\n                  type=\"textarea\"\r\n                  value={productDescription}\r\n                  onChange={(evt) =>setProductDescription(evt.target.value)}\r\n                  required\r\n                   />\r\n                </FormGroup>\r\n  \r\n                <FormGroup>\r\n                  <Label for=\"exampleFile\">Picture 1</Label> \r\n                  <Input files={productImage1} onChange={handleFileChange1}   required id=\"image1\" name=\"file\" accept=\"image/*\" type=\"file\"\r\n                   />\r\n                  <FormText>\r\n                      Attach Picture of Product\r\n                  </FormText>\r\n                </FormGroup>\r\n\r\n              <FormGroup>\r\n                  <Label for=\"exampleFile\">Picture 2</Label>\r\n                  <Input   files={productImage2}  required id=\"image2\" name=\"file\" accept=\"image/*\" type=\"file\"\r\n                    onChange={handleFileChange2} \r\n                   />\r\n                  <FormText>\r\n                      Attach Picture of Product\r\n                  </FormText>\r\n              </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Label for=\"exampleFile\">Picture 3</Label>\r\n                  <Input  files={productImage3} onChange={handleFileChange3}  required id=\"image1\" name=\"file\" accept=\"image/*\" type=\"file\"\r\n                   />\r\n                  <FormText>\r\n                      Attach Picture of Product\r\n                  </FormText>\r\n                </FormGroup>\r\n\r\n                <Button>Submit</Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n  \r\n  export default AddProduct;\r\n  "],"names":["useState","currentStore","setCurrentStore","user","localStorage","getItem","currentUser","JSON","parse","currentUsers","console","log","useEffect","axios","_id","resp","data","fetchStores","CurrentStore","formRef","useRef","productTitle","setProductTitle","productPrice","setProductPrice","totalProductStock","setTotalProductStock","Small","setSmall","Medium","setMedium","Large","setLarge","xLarge","setXLarge","productSize","setProductSize","productCategory","setProductCategory","productType","setProductType","productDescription","setProductDescription","productImage1","setProductImage1","productImage2","setProductImage2","productImage3","setProductImage3","handleReset","current","reset","e","preventDefault","form","FormData","append","stringify","toast","tag","className","class","onSubmit","SubmitProduct","innerRef","for","id","name","placeholder","type","value","onChange","evt","target","required","files","event","accept"],"sourceRoot":""}